<div id="menu-icon-wrapper" ng-click="toggleSideMenu()">

<svg id='mysvg' xmlns="http://www.w3.org/2000/svg" width="50" height="55" viewBox="0 0 24 24">
  <path d="M0 0h24v24h-24z" fill="none" />

  <rect style="fill:#fff;" width="18" height="2" x="3" y="11">
    <animateTransform class='to-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="rotate" from="0 12 12" to="180 12 12" repeatCount="infinite" fill="freeze" />
    
    <animateTransform class='from-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="rotate" from="180 12 12" to="360 20 20" repeatCount="infinite" fill="freeze" />
  </rect>

  <rect style="fill:#fff;" width="18" height="2" x="3" y="6">
    <animateTransform class='to-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="rotate" from="0 12 12" to="225 12 12" repeatCount="infinite" fill="freeze" additive="sum" />
    <animateTransform class='to-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="scale" from="1 1" to=".7 1" repeatCount="infinite" fill="freeze" additive="sum" />
    <animateTransform class='to-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="translate" from="0 0" to="6 -1" repeatCount="infinite" fill="freeze" additive="sum" />
    
    <animateTransform class='from-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="rotate" from="225 12 12" to="360 12 12" repeatCount="infinite" fill="freeze" />
    <animateTransform class='from-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="scale" from=".7 1" to="1 1" repeatCount="infinite" fill="freeze" additive="sum" />
    <animateTransform class='from-arrow' attributeName="transform" begin="indefinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="translate" from="6 -1" to="0 0" repeatCount="infinite" fill="freeze" additive="sum" />
  </rect>

  <rect style="fill:#fff;" width="18" height="2" x="3" y="16">
    <animateTransform class='to-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="rotate" from="0 12 12" to="135 12 12" repeatCount="infinite" fill="freeze"  additive="sum" />
    <animateTransform class='to-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="scale" from="1 1" to=".7 1" repeatCount="infinite" fill="freeze" additive="sum" />
    <animateTransform class='to-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="translate" from="0 0" to="6 1" repeatCount="infinite" fill="freeze" additive="sum" />
    
    <animateTransform class='from-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, .2, 1" type="rotate" from="135 12 12" to="360 12 12" repeatCount="infinite" fill="freeze"  />
    <animateTransform class='from-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="scale" from=".7 1" to="1 1" repeatCount="infinite" fill="freeze" additive="sum" />
    <animateTransform class='from-arrow' attributeName="transform" begin="infinite" dur="300ms" calcMode="spline" keySplines="0.4, 0, 0.2, 1" type="translate" from="6 1" to="0 0" repeatCount="infinite" fill="freeze" additive="sum" />
  </rect>

</svg>

</div>

<script>
if (SVGElement && SVGElement.prototype) {
 
    SVGElement.prototype.hasClass = function (className) {
        return new RegExp('(\\s|^)' + className + '(\\s|$)').test(this.getAttribute('class'));
    };
 
    SVGElement.prototype.addClass = function (className) {
        if (!this.hasClass(className)) {
            this.setAttribute('class', this.getAttribute('class') + ' ' + className);
        }
    };
 
    SVGElement.prototype.removeClass = function (className) {
        var removedClass = this.getAttribute('class').replace(new RegExp('(\\s|^)' + className + '(\\s|$)', 'g'), '$2');
        if (this.hasClass(className)) {
            this.setAttribute('class', removedClass);
        }
    };
 
    SVGElement.prototype.toggleClass = function (className) {
        if (this.hasClass(className)) {
            this.removeClass(className);
        } else {
            this.addClass(className);
        }
    };
 
}

var svg = document.getElementById('mysvg');
var toArrow = svg.getElementsByClassName('to-arrow');
var fromArrow = svg.getElementsByClassName('from-arrow');

svg.addEventListener('click', function(){
  if ( svg.hasClass('arrow') ) {
    svg.removeClass('arrow');
    animateToMenu();
  } else {
    svg.addClass('arrow');
    animateToArrow();
  }
});

document.getElementById('to-arrow').addEventListener('click', function(){ animateToArrow(); });

document.getElementById('to-menu').addEventListener('click', function(){ animateToMenu(); });

document.getElementById('pause').addEventListener('click', function(){
  if ( svg.animationsPaused() ) {
    svg.unpauseAnimations();
  } else {
    svg.pauseAnimations();
  }
});

function animateToArrow(){
   svg.unpauseAnimations();
  for(c=0; c < toArrow.length; c++) {
    toArrow[c].beginElement();    
  }
}

function animateToMenu(){
  svg.unpauseAnimations();
  for(c=0; c < toArrow.length; c++) {
    fromArrow[c].beginElement();    
  }
}


</script>